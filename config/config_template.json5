{
  "experiment": {
    "experiment_name": {
      "value": "true_data_test",
      "type": "string",
    },
    "output_folder": {
      "value": "../results",
      "type": "Path",
    },
    "repetitions": {
      "value": 5,
      "type": "int",
    },
  },
  "training": {
    "epochs": {
      "value": 5,
      "type": "int",
    },
    "initial_learning_rate": {
      "value": 0.001,
      "type": "float",
    },
    "optimizer": {
      "type": {
        "value": "adam",
        "type": "string",
      },
    },
    "loss_function": {
      "value": "mse",
      "type": "string",
    },
  },
  "logging": {
    "num_print_points": {
      "value": 64,
      "type": "int",
    },
  },
  "dataset": {
    "dataset_name": {
      "value": "/mnt/ensg/tout_le_monde/Basile/dataset_base/dataset_norm_flatten/data.lmdb",
      "type": "string",
    },
    "test_split": {
      "value": 0.1,
      "type": "float",
    },
    "validation_split": {
      "value": 0.1,
      "type": "float",
    },
    "batch_size": {
      "value": 128,
      "type": "int",
    },
  },
  "model": {
    "mlp": {
      "input_metadata_dim": {
        "value": 3,
        "type": "int",
      },
      "hidden_dims": [16, 64, 128],
    }, // mlp
    "cnn": {
      "cnn_layers": [
        {
          "layer_type": {
            "value": "conv2D",
            "type": "string",
          },
          "num_in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_width": {
            "value": 7,
            "type": "int",
          },
          "kernel_height": {
            "value": 7,
            "type": "int",
          },
          "stride_width": {
            "value": 2,
            "type": "int",
          },
          "stride_height": {
            "value": 2,
            "type": "int",
          },
          "padding_width": {
            "value": 3,
            "type": "int",
          },
          "padding_height": {
            "value": 3,
            "type": "int",
          },
          dilation: {
            "value": 1,
            "type": "int",
          },
        },
        {
          "layer_type": {
            "value": "conv1D",
            "type": "string",
          },
          "kernel_width": {
            "value": 3,
            "type": "int",
          },
          "stride_width": {
            "value": 1,
            "type": "int",
          },
          "padding_width": {
            "value": 1,
            "type": "int",
          },
          "dilation": {
            "value": 1,
            "type": "int",
          },
        },
        {
          "layer_type": {
            "value": "branch", // This means depending on the input shape, the net will use either on or the other element of the list
            "type": "string",
          },
          "threshold": {
            "value": 30, // This is the threshold for the branch, if the input shape is greater than this value, the first element of the list will be used, otherwise the second one
            "type": "int",
          },
          "options": [
            [
              {
                "layer_type": {
                "value": "conv2D",
                "type": "string",
                },
                "num_in_channels": {
                  "value": 1,
                  "type": "int",
                },
                "kernel_width": {
                  "value": 3,
                  "type": "int",
                },
                "kernel_height": {
                  "value": 3,
                  "type": "int",
                },
                "stride_width": {
                  "value": 2,
                  "type": "int",
                },
                "stride_height": {
                  "value": 2,
                  "type": "int",
                },
                "padding_width": {
                  "value": 1,
                  "type": "int",
                },
                "padding_height": {
                  "value": 1,
                  "type": "int",
                },
                "dilation": {
                  "value": 1,
                  "type": "int",
                },
              },
            ], // This is the first option, if the input shape is greater than the threshold, this option will be used
            [
              {
                layer_type: {
                  "value": "conv1D",
                  "type": "string",
                },
                "kernel_width": {
                  "value": 3,
                  "type": "int",
                },
                "stride_width": {
                  "value": 1,
                  "type": "int",
                },
                "padding_width": {
                  "value": 1,
                  "type": "int",
                },
                "dilation": {
                  "value": 1,
                  "type": "int",
                },
              },
            ], // This is the second option, if the input shape is less than the threshold, this option will be used
          ], // options
        }, // branch
        {
          "layer_type": {
            "value": "conv1D",
            "type": "string",
          },
          "num_in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_width": {
            "value": 3,
            "type": "int",
          },
          "stride_width": {
            "value": 1,
            "type": "int",
          },
          "padding_width": {
            "value": 2,
            "type": "int",
          },
          "dilation": {
            "value": 2,
            "type": "int",
          },
        },
        {
          "layer_type": {
            "value": "branch",
            "type": "string",
          },
          "threshold": {
            "value": 30, // This is the threshold for the branch, if the input shape is greater than this value, the first element of the list will be used, otherwise the second one
            "type": "int",
          },
          "options": [
            [
              {
                "layer_type": {
                  "value": "conv1D",
                  "type": "string",
                },
                "num_in_channels": {
                  "value": 1,
                  "type": "int",
                },
                "kernel_width": {
                  "value": 3,
                  "type": "int",
                },
                "stride_width": {
                  "value": 1,
                  "type": "int",
                },
                "padding_width": {
                  "value": 2,
                  "type": "int",
                },
                "dilation": {
                  "value": 2,
                  "type": "int",
                },
              },
            ], // This is the first option, if the input shape is greater than the threshold, this option will be used
            [
            ], // This is the second option, if the input shape is less than the threshold, this option will be used
          ], // options
        }, // branch
        {
          "layer_type": {
            "value": "convT2D",
            "type": "string",
          },
          "num_in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_width": {
            "value": 4,
            "type": "int",
          },
          "kernel_height": {
            "value": 4,
            "type": "int",
          },
          "stride_width": {
            "value": 2,
            "type": "int",
          },
          "stride_height": {
            "value": 2,
            "type": "int",
          },
          "padding_width": {
            "value": 1,
            "type": "int",
          },
          "padding_height": {
            "value": 1,
            "type": "int",
          },
          "dilation": {
            "value": 1,
            "type": "int",
          },
        },
        {
          "layer_type": {
            "value": "convT2D",
            "type": "string",
          },
          "num_in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_width": {
            "value": 4,
            "type": "int",
          },
          "kernel_height": {
            "value": 4,
            "type": "int",
          },
          "stride_width": {
            "value": 2,
            "type": "int",
          },
          "stride_height": {
            "value": 2,
            "type": "int",
          },
          "padding_width": {
            "value": 1,
            "type": "int",
          },
          "padding_height": {
            "value": 1,
            "type": "int",
          },
          "dilation": {
            "value": 1,
            "type": "int",
          },
        },
        {
          "layer_type": {
            "value": "convT2D",
            "type": "string",
          },
          "num_in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_width": {
            "value": 4,
            "type": "int",
          },
          "kernel_height": {
            "value": 4,
            "type": "int",
          },
          "stride_width": {
            "value": 2,
            "type": "int",
          },
          "stride_height": {
            "value": 2,
            "type": "int",
          },
          "padding_width": {
            "value": 1,
            "type": "int",
          },
          "padding_height": {
            "value": 1,
            "type": "int",
          },
          "dilation": {
            "value": 1,
            "type": "int",
          },
        },
        {
          "layer_type": {
            "value": "conv2D",
            "type": "string",
          },
          "num_in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_width": {
            "value": 3,
            "type": "int",
          },
          "kernel_height": {
            "value": 3,
            "type": "int",
          },
          "stride_width": {
            "value": 1,
            "type": "int",
          },
          "stride_height": {
            "value": 1,
            "type": "int",
          },
          "padding_width": {
            "value": 1,
            "type": "int",
          },
          "padding_height": {
            "value": 1,
            "type": "int",
          },
          "dilation": {
            "value": 1,
            "type": "int",
          },
        },
      ], // cnn_layers
      "num_out_channels": {
        "value": 1,
        "type": "int",
      },
    }, // cnn
  },
}