{
  "experiment": {
    "experiment_name": {
      "value": "small_lr_1e-4",
      "type": "string",
    },
    "output_folder": {
      "value": "../results",
      "type": "Path",
    },
    "repetitions": {
      "value": 5,
      "type": "int",
    },
  },
  "training": {
    "epochs": {
      "value": 3,
      "type": "int",
    },
    "initial_learning_rate": {
      "value": 0.0001,
      "type": "float",
    },
    "optimizer": {
      "type": {
        "value": "adam",
        "type": "string",
      },
      "weight_decay": {
        "value": 0.00,
        "type": "float",
      },
    },
    "loss_function": {
      "value": "mse",
      "type": "string",
    },
    "lr_scheduler": {
      "type": {
        "value": "plateau",
        "type": "string",
      },
      "enabled": {
        "value": "true",
        "type": "bool",
      },
      "factor": {
        "value": 0.5,
        "type": "float",
      },
      "patience": {
        "value": 5,
        "type": "int",
      },
    },
  },
  "logging": {
    "print_points": {
      "value": 32,
      "type": "int",
    },
  },
  "dataset": {
    "num_samples": {
      "value": 65536,
      "type": "int",
    },
    // num_sub_group must be a divisor of num_samples
    "num_sub_group": {
      "value": 4,
      "type": "int",
    },
    "dataset_name": {
      "value": "_generated",
      "type": "string",
    },
    "data_min_size": {
      "value": 10,
      "type": "int",
    },
    "data_max_size": {
      "value": 100,
      "type": "int",
    },
    "noise": {
      "value": 0.1,
      "type": "float",
    },
    // Be careful as the total sample generated or used is num_samples * (1 + test_split + validation_split)

    "test_split": {
      "value": 0.1,
      "type": "float",
    },
    "validation_split": {
      "value": 0.1,
      "type": "float",
    },
    // Batch size must be a divisor of num_samples
    "batch_size": {
      "value": 64,
      "type": "int",
    },
    // Batch mixture must be a divisor of batch_size
    "batch_mixture": {
      "value": 4,
      "type": "int",
    },
  },
  "model": {
    "mlp": {
      "input_metadata_dim": {
        "value": 2,
        "type": "int",
      },
      "hidden_dims": [64],
    },
    "cnn": {
      "conv_layers": [
        {
          "in_channels": {
            "value": 1,
            "type": "int",
          },
          "kernel_shape": {
            "value": 3,
            "type": "int",
          },
        }, 
        {
          "in_channels": {
            "value": 32,
            "type": "int",
          },
          "kernel_shape": {
            "value": 3,
            "type": "int",
          },
        },
      ],
      "out_channels": {
        "value": 1,
        "type": "int",
      },
    },
  },
}